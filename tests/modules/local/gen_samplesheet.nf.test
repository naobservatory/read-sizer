nextflow_process {
    name "Test Process GENERATE_SAMPLESHEET"
    script "modules/local/gen_samplesheet.nf"
    process "GENERATE_SAMPLESHEET"

    test("Should generate sample sheet from S3 bucket") {
        when {
            process {
                """
                input[0] = "nao-testing"
                input[1] = "read-sizer"
                input[2] = ""
                input[3] = file("${projectDir}/scripts/generate_samplesheet.py")
                """
            }
        }

        then {
        assert process.success
        
        // Check output exists
        assert process.out.size() == 1
        
        // Get the sample sheet file path string
        def sampleSheetFile = process.out.get(0).toString()
        assert sampleSheetFile.contains("sample_sheet.csv")
        
        // Remove brackets from the string to get the clean path
        def cleanPath = sampleSheetFile.replaceAll(/^\[|\]$/, '')
        
        // Read the sample sheet content
        def sampleSheetContent = path(cleanPath).text
        
        // Parse the CSV content
        def lines = sampleSheetContent.readLines()
        assert lines.size() >= 1  // At least the header
        assert lines[0] == "id,fastq_1,fastq_2,outdir"
        
        // Skip header, check data lines if any exist
        if (lines.size() > 1) {
            lines.tail().each { line ->
                def columns = line.split(',')
                assert columns.size() >= 4
                
                def fastq1 = columns[1]
                def outdir = columns[3]
                
                // Verify directory transformation logic
                assert outdir.contains("/siz/")
                assert !outdir.contains("/raw/")
                assert outdir.endsWith("/")
                
                // Test the specific transformation logic
                def expectedOutdir = fastq1.replace("/raw/", "/siz/").replaceAll("/[^/]+\$", "/")
                assert outdir == expectedOutdir
            }
        }
    }
}

    test("Should generate sample sheet with custom output directory") {
        when {
            process {
                """
                input[0] = "nao-testing"
                input[1] = "read-sizer"
                input[2] = "s3://nao-testing/read-sizer/custom"
                input[3] = file("${projectDir}/scripts/generate_samplesheet.py")
                """
            }
        }

        then {
            assert process.success
            
            // Check file output is emitted
            assert process.out.size() == 1
            assert process.out.get(0) != null
        }
    }

    test("Should fail with invalid bucket") {
        when {
            process {
                """
                input[0] = "nonexistent-bucket-name-123456789"
                input[1] = "read-sizer"
                input[2] = ""
                input[3] = file("${projectDir}/scripts/generate_samplesheet.py")
                """
            }
        }

        then {
            assert process.failed
        }
    }
}