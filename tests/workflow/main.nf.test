nextflow_pipeline {
    name "Test read-SIZer pipeline"
    script "main.nf"
    
    test("Should require sample_sheet or bucket/delivery parameters") {
        when {}
        
        then {
            assert workflow.failed
            assert workflow.stdout.contains("You must provide either --sample_sheet or both --bucket and --delivery")
        }
    }
    
    test("Should accept sample_sheet parameter") {
        when {
            params {
                // runs a small case end to end
                sample_sheet = "${projectDir}/tests/data/test_samplesheet.csv"
                read_pairs_per_siz = 1000
            }
        }
        
        then {
            assert workflow.success
            assert workflow.trace.succeeded().size() > 0
        }
    }
    
    test("Should handle bucket and delivery parameters") {
        when {
            params {
                bucket = "test-bucket"
                delivery = "test-delivery"
            }
            options "--dry-run"
        }
        
        then {
            assert !workflow.stdout.contains("Unknown parameter")
        }
    }
}